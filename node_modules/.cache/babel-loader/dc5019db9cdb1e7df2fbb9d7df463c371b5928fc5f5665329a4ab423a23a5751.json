{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"color-game\"\n};\nconst _hoisted_2 = {\n  id: \"result\"\n};\nconst _hoisted_3 = {\n  id: \"score\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[1] || (_cache[1] = _createElementVNode(\"h1\", null, \"顏色辨識遊戲\", -1 /* HOISTED */)), _cache[2] || (_cache[2] = _createElementVNode(\"p\", null, \"當顯示顏色時，請用語音說出顯示的顏色名稱！\", -1 /* HOISTED */)), _createElementVNode(\"div\", {\n    id: \"color-display\",\n    style: _normalizeStyle({\n      color: $data.colorCode\n    })\n  }, _toDisplayString($data.displayedWord), 5 /* TEXT, STYLE */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.startGame && $options.startGame(...args))\n  }, \"開始遊戲\"), _createElementVNode(\"div\", _hoisted_2, _toDisplayString($data.result), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_3, \"分數: \" + _toDisplayString($data.score), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["class","id","_createElementBlock","_hoisted_1","_createElementVNode","style","_normalizeStyle","color","$data","colorCode","displayedWord","onClick","_cache","args","$options","startGame","_hoisted_2","_toDisplayString","result","_hoisted_3","score"],"sources":["/home/liang/Programs/colorgame/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"color-game\">\n    <h1>顏色辨識遊戲</h1>\n    <p>當顯示顏色時，請用語音說出顯示的顏色名稱！</p>\n    <div id=\"color-display\" :style=\"{ color: colorCode }\">{{ displayedWord }}</div>\n    <button @click=\"startGame\">開始遊戲</button>\n    <div id=\"result\">{{ result }}</div>\n    <div id=\"score\">分數: {{ score }}</div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      colors: [\"黑\", \"棕\", \"紅\", \"橙\", \"黃\", \"綠\", \"藍\", \"紫\", \"灰\", \"白\"],\n      score: 0,\n      roundTime: 30, // 每回合時間（秒）\n      timer: null,\n      displayedWord: \"按下開始遊戲\",\n      colorCode: \"#000000\",\n      result: \"\",\n    };\n  },\n  methods: {\n    startGame() {\n      this.score = 0;\n      this.result = \"\";\n      this.startRound();\n      this.timer = setTimeout(this.endGame, this.roundTime * 1000);\n    },\n    startRound() {\n      const word = this.colors[Math.floor(Math.random() * this.colors.length)];\n      let colorDisplayed;\n      do {\n        colorDisplayed = this.colors[Math.floor(Math.random() * this.colors.length)];\n      } while (colorDisplayed === word);\n\n      this.displayedWord = word;\n      this.colorCode = this.getColorCode(colorDisplayed);\n      this.startSpeechRecognition(colorDisplayed);\n    },\n    getColorCode(colorName) {\n      const colorMap = {\n        黑: \"#000000\",\n        棕: \"#A52A2A\",\n        紅: \"#FF0000\",\n        橙: \"#FFA500\",\n        黃: \"#FFFF00\",\n        綠: \"#008000\",\n        藍: \"#0000FF\",\n        紫: \"#800080\",\n        灰: \"#808080\",\n        白: \"#FFFFFF\",\n      };\n      return colorMap[colorName];\n    },\n    startSpeechRecognition(correctColor) {\n      const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\n      recognition.lang = \"zh-TW\";\n      recognition.start();\n\n      recognition.onresult = (event) => {\n        const userAnswer = event.results[0][0].transcript;\n        if (userAnswer === correctColor) {\n          this.score++;\n          this.result = \"答對了！\";\n        } else {\n          this.result = `答錯了！正確答案是：${correctColor}`;\n        }\n        this.$nextTick(() => {\n          setTimeout(this.startRound, 1000); // 等待一秒再開始新回合\n        });\n      };\n\n      recognition.onerror = () => {\n        this.result = \"語音辨識失敗，請再試一次。\";\n        this.$nextTick(() => {\n          setTimeout(this.startRound, 1000);\n        });\n      };\n    },\n    endGame() {\n      clearTimeout(this.timer);\n      this.result = `遊戲結束！總分數: ${this.score}`;\n      this.displayedWord = \"按下開始遊戲\";\n    },\n  },\n};\n</script>\n\n<style scoped>\n.color-game {\n  text-align: center;\n  font-family: Arial, sans-serif;\n}\n#color-display {\n  font-size: 3em;\n  margin-top: 50px;\n}\n#result, #score {\n  margin-top: 20px;\n  font-size: 1.5em;\n}\nbutton {\n  margin-top: 20px;\n  padding: 10px 20px;\n  font-size: 1em;\n}\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAY;;EAKhBC,EAAE,EAAC;AAAQ;;EACXA,EAAE,EAAC;AAAO;;uBANjBC,mBAAA,CAOM,OAPNC,UAOM,G,0BANJC,mBAAA,CAAe,YAAX,QAAM,sB,0BACVA,mBAAA,CAA4B,WAAzB,uBAAqB,sBACxBA,mBAAA,CAA+E;IAA1EH,EAAE,EAAC,eAAe;IAAEI,KAAK,EAJlCC,eAAA;MAAAC,KAAA,EAI6CC,KAAA,CAAAC;IAAS;sBAAOD,KAAA,CAAAE,aAAa,yBACtEN,mBAAA,CAAwC;IAA/BO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;KAAE,MAAI,GAC/BT,mBAAA,CAAmC,OAAnCY,UAAmC,EAAAC,gBAAA,CAAfT,KAAA,CAAAU,MAAM,kBAC1Bd,mBAAA,CAAqC,OAArCe,UAAqC,EAArB,MAAI,GAAAF,gBAAA,CAAGT,KAAA,CAAAY,KAAK,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}